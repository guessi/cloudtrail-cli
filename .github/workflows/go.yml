name: Go

on:
  push:
    branches:
    - main
    schedule:
    - cron: '0 3 * * *'
    tags:
    - "v1.[0-9]+.[0-9]+"

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version-file: "go.mod"

    - name: Cache Go modules and build cache
      uses: actions/cache@v4
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

    - name: Run tests
      run: make test

  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version-file: "go.mod"

    - name: Cache Go modules and build cache
      uses: actions/cache@v4
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

    - name: Run staticcheck
      run: make staticcheck

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 8
    steps:
    - uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version-file: "go.mod"

    - name: Cache Go modules and build cache
      uses: actions/cache@v4
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

    - name: Build all platforms
      run: make build-parallel

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries-all
        path: releases/
        retention-days: 1

  release:
    if: ${{ github.ref_type == 'tag' && contains(github.ref, 'v1.') }}
    needs: [test, lint, build]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - uses: actions/checkout@v5

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: releases/
        merge-multiple: true

    - name: Run make release-only
      run: make release-only
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
